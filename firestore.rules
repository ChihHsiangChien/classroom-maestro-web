rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    function isAdmin() {
      // Check if the requesting user's UID exists as a document ID in the 'admins' collection.
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins collection: Only other admins can manage this list.
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
    
    // Users collection: Stores basic user info.
    match /users/{userId} {
      // Admins can read the full list of users for the admin panel.
      // Admins can also delete user documents.
      // Users can write to their own document on sign-in.
      allow read: if isAdmin();
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // Classrooms collection
    match /classrooms/{classroomId} {
      // Admins can read all classrooms.
      // Owners can read their own classrooms.
      // Anyone can 'get' a single classroom (for joining).
      allow read: if isAdmin() || request.method == 'get' || isOwner(resource);
      
      // Only the owner can create their classroom.
      allow create: if isOwner(resource);

      // Admins and owners can delete classrooms.
      allow delete: if isOwner(resource) || isAdmin();
      
      // Update logic:
      allow update: if 
        // 1. Allow the owner to make any changes (e.g., start activities, lock room).
        isOwner(resource) ||
        // 2. Allow an admin to make any changes.
        isAdmin() ||
        // 3. Allow a student to claim a pending race. This is a very specific update.
        (
          request.resource.data.race.status == 'finished' &&
          resource.data.race.status == 'pending'
        );

      // Subcollections
      match /submissions/{submissionId} {
        // Admins and owners can read submissions.
        allow read: if isAdmin() || isOwner(get(/databases/$(database)/documents/classrooms/$(classroomId)));
        // Admins can delete submissions (for history cleanup).
        allow delete: if isAdmin();
        // Anyone can create a submission (students submitting answers).
        allow create: if true;
        // No one can update submissions from the client.
        allow update: if false;
      }
      
      match /presence/{studentId} {
         // Admins and owners can read presence data.
        allow read: if isAdmin() || isOwner(get(/databases/$(database)/documents/classrooms/$(classroomId)));
        // Students can update their own presence.
        allow create, update: if true;
        // Admins can delete presence data (as part of teacher cleanup).
        allow delete: if isAdmin();
      }
    }
  }
}
