rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    // These functions help keep the rules readable and reusable.

    function isAuthenticated() {
      return request.auth != null;
    }

    function isAnonymous() {
      return isAuthenticated() && request.auth.token.firebase.sign_in_provider == 'anonymous';
    }

    function isTeacher() {
      return isAuthenticated() && !isAnonymous();
    }

    function isAdmin() {
      // This is a non-billable read and is safe from recursive loops.
      return isTeacher() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    // --- Collection Rules ---

    match /admins/{adminId} {
      // A user can check their own admin status. Admins can check anyone.
      allow get: if (isTeacher() && request.auth.uid == adminId) || isAdmin();
      // Only other Admins can manage the admin list.
      allow list, write: if isAdmin();
    }

    match /users/{userId} {
      // A user can read/update their own doc. Admins can read any user's doc.
      allow get, update: if (isTeacher() && request.auth.uid == userId) || isAdmin();
      // A teacher can create their own user doc upon first sign-in.
      allow create: if isTeacher() && request.auth.uid == userId;
      // Only admins can list all users for the admin dashboard.
      allow list: if isAdmin();
    }

    match /aiUsageLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isTeacher();
    }

    match /classrooms/{classroomId} {
      // Admins can list all. Teachers can list their own via a query.
      allow list: if isTeacher() || isAdmin(); 
      // Students can GET a classroom to join. Owners/Admins can GET it too.
      allow get: if isAnonymous() || isOwner(resource) || isAdmin();
      
      // Teachers create their own classrooms.
      allow create: if isTeacher();
      // Only owners or admins can update/delete.
      allow update, delete: if isOwner(resource) || isAdmin();
      
      // Subcollections
      match /submissions/{submissionId} {
        allow read, create: if isAuthenticated();
        // Submissions are immutable from the client.
        allow update, delete: if false; 
      }

      match /presence/{studentId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    match /courseware/{coursewareId} {
      // Admins can list all. Teachers can list their own via a query.
      allow list: if isTeacher() || isAdmin();
      // Only owners or admins can GET a single courseware.
      allow get: if isOwner(resource) || isAdmin();
      
      // Teachers create their own courseware.
      allow create: if isTeacher();
      // Only owners or admins can update/delete.
      allow update, delete: if isOwner(resource) || isAdmin();
    }
  }
}
