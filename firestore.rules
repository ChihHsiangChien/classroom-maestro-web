
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins can read/write anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // AI Usage Logs
    match /aiUsageLogs/{logId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }

    // Courseware collection
    match /courseware/{coursewareId} {
        allow read, write: if request.auth.uid == resource.data.ownerId;
        allow create: if request.auth.uid == request.resource.data.ownerId;
    }

    // Classrooms collection and subcollections
    match /classrooms/{classroomId} {
      // The classroom document itself
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow read, update, delete: if request.auth.uid == resource.data.ownerId;
      
      // Students (anonymous) need read access to join
      allow read: if request.auth == null;

      // Submissions subcollection
      match /submissions/{submissionId} {
        allow create: if request.auth == null;
        allow read: if request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId;
        allow update, delete: if false; // For data integrity
      }

      // Presence subcollection
      match /presence/{studentId} {
        allow write: if request.auth == null;
        allow read: if request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId;
      }
    }
  }
}

    