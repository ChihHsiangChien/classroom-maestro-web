rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Import helper functions
    include "lib/firestore.rules.helpers";

    // Classrooms:
    // Read: Anyone can read classroom data (for joining).
    // Write: Only the owner or an admin can modify.
    // Create: The ownerId must match the user creating it.
    match /classrooms/{classroomId} {
      allow read: if true; // Public read needed for students to join
      allow create: if isOwner(request.resource.data);
      allow update, delete: if isOwner(resource.data) || isAdmin(request.auth.uid);
      
      // Sub-collections
      match /{allSubcollections=**} {
        allow read, write: if canAccessSubcollection(classroomId);
      }
    }

    // Courseware:
    // Read: Only the owner or an admin.
    // Write: Only the owner or an admin.
    // Create: The ownerId must match the user creating it.
    match /courseware/{coursewareId} {
      allow read: if isOwner(resource.data) || isAdmin(request.auth.uid);
      allow create: if isOwner(request.resource.data);
      allow update, delete: if isOwner(resource.data) || isAdmin(request.auth.uid);
    }
    
    // Users:
    // Read: Any authenticated teacher can read the user list.
    // Update: A user can update their own document (e.g., lastActivity).
    match /users/{userId} {
      allow read: if isTeacher(request.auth.uid);
      allow update: if request.auth.uid == userId;
    }

    // Admins:
    // Read: Only admins can read the admin list.
    match /admins/{adminId} {
      allow read: if isAdmin(request.auth.uid);
    }
    
    // AI Usage Logs:
    // Create: Any authenticated teacher can create a log entry.
    // Read/Update/Delete: Only admins.
    match /aiUsageLogs/{logId} {
      allow create: if isTeacher(request.auth.uid);
      allow read, update, delete: if isAdmin(request.auth.uid);
    }
  }
}
