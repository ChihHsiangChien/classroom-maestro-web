
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(docData) {
      return request.auth != null && request.auth.uid == docData.ownerId;
    }

    function isAdmin() {
      // Checks if the requesting user's UID exists as a document in the 'admins' collection.
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- Collections Rules ---
    match /users/{userId} {
      // A user can read and write to their own document.
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // An admin can read any user's document or list all users.
      allow read: if isAdmin();
    }

    match /admins/{adminId} {
      // Only admins can see who else is an admin.
      allow read: if isAdmin();
    }

    match /classrooms/{classroomId} {
      // === READ RULES ===
      // `get`: Allow anyone to get a single classroom document.
      // This is necessary for unauthenticated students on the join page to read class details.
      allow get: if true;
      
      // `list`: Allow authenticated users to list classrooms.
      // The query MUST be constrained (e.g., `where('ownerId', '==', request.auth.uid)`).
      // Admins are allowed to list without constraints.
      allow list: if (request.auth != null && request.query.ownerId == request.auth.uid) || isAdmin();

      // === WRITE RULES ===
      // CREATE: Any authenticated user can create a classroom.
      allow create: if request.auth != null;

      // UPDATE: The owner can update, an admin can update, or anyone can update ONLY the 'race' field for the snatch game.
      allow update: if (request.auth != null && (isOwner(resource.data) || isAdmin())) ||
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['race']));

      // DELETE: The owner or an admin can delete.
      allow delete: if request.auth != null && (isOwner(resource.data) || isAdmin());

      // --- Sub-collections ---
      match /submissions/{submissionId} {
        // Anyone can create a submission (students are not authenticated).
        allow create: if true;
        
        // The classroom owner or an admin can manage submissions.
        allow read, list, delete: if isOwner(get(/databases/$(database)/documents/classrooms/$(classroomId)).data) || isAdmin();
      }

      match /presence/{studentId} {
        // Anyone can read or write to presence for real-time status updates.
        allow read, write: if true;
      }
    }
  }
}
