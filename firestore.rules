
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isOwner(ownerId) {
      return request.auth.uid == ownerId;
    }
    
    function isTeacher() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins have full access to their own collection
    match /admins/{adminId} {
        allow read, write: if isOwner(adminId);
    }
    
    // Teachers can manage their own user doc
    match /users/{userId} {
        allow read, write: if isOwner(userId);
    }

    // Classrooms
    match /classrooms/{classroomId} {
      allow read: if isTeacher();
      allow create: if isTeacher();
      allow update, delete: if isOwner(resource.data.ownerId);

      // Submissions subcollection
      match /submissions/{submissionId} {
        allow create, read: if isTeacher();
      }
      
      // Presence subcollection
      match /presence/{studentId} {
        // Allow anyone to update their presence (students are not authenticated)
        // Teachers can also update presence (e.g. kicking)
        allow read, write: if true;
      }
    }
    
    // Courseware
    match /courseware/{coursewareId} {
      // An owner can do anything to their own courseware. An admin can read any courseware.
      allow read: if isOwner(resource.data.ownerId) || isAdmin();
      // Only owners can create/edit/delete their own courseware.
      allow create, update, delete: if isOwner(resource.data.ownerId);
    }
  }
}
