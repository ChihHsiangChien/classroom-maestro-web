
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    // Checks if the requesting user is an admin by looking up their UID in the admins collection.
    function isAdmin() {
      // Anyone authenticated can check for admin status to render UI, but only admins can list all admins.
      return isAuthenticated() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Checks if the user is the owner of an existing resource.
    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    // --- Collection Rules ---

    // Admins: Only admins can read this collection. No one can write it from the client.
    match /admins/{adminId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    // Users: Authenticated users can create their own document and update it. Admins can view all.
    match /users/{userId} {
      allow get: if isAuthenticated();
      allow list: if isAdmin();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId; // Users can update their own profile, e.g., lastActivity
    }
    
    // AI Usage Logs: Any authenticated teacher can create logs. Only admins can read them.
    match /aiUsageLogs/{logId} {
      allow create: if isAuthenticated();
      allow read: if isAdmin();
    }

    // Classrooms: Authenticated users can read. Write access is restricted to owners/admins.
    match /classrooms/{classroomId} {
      // Any authenticated user (including anonymous students) can read classroom data.
      // This is necessary for students to join and for teachers to list their own classes.
      // The UI query (`where("ownerId", "==", uid)`) prevents non-admins from seeing other's classes.
      allow read: if isAuthenticated();

      // Only authenticated owners can create, update, or delete classrooms. Admins also have rights.
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if isAuthenticated() && (isOwner(resource) || isAdmin());

      // Subcollections
      match /submissions/{submissionId} {
        // Any authenticated user (student) can submit an answer.
        allow create: if isAuthenticated();
        // Any authenticated user can read submissions for results.
        allow read: if isAuthenticated();
      }

      match /presence/{studentId} {
        // Any authenticated user can write their presence.
        allow write: if isAuthenticated();
        // Any authenticated user can read presence data.
        allow read: if isAuthenticated();
      }
    }

    // Courseware: Only the owner or an admin can access.
    match /courseware/{coursewareId} {
      allow read, write: if isAuthenticated() && (isOwner(resource) || isAdmin());
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
    }
  }
}
