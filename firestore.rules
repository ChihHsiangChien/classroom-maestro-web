rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requesting user is an admin.
    // It checks for the existence of the user's UID in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // USERS collection: Stores basic user info.
    match /users/{userId} {
      // GET: A user can get their own document. An admin can get any user's document.
      allow get: if request.auth.uid == userId || isAdmin();
      
      // LIST: Only an admin can list all user documents (for the admin panel).
      allow list: if isAdmin();
      
      // WRITE (create, update, delete): A user can write to their own document. An admin can write to any user's document.
      allow write: if request.auth.uid == userId || isAdmin();
    }
    
    // ADMINS collection: A simple list of UIDs for users with admin privileges.
    match /admins/{adminId} {
      // READ: Any authenticated user can check if a UID is in the admins list.
      // This is necessary for the isAdmin() function to work for all users.
      allow read: if request.auth != null;
    }
    
    // CLASSROOMS collection
    match /classrooms/{classroomId} {
      // CREATE: A user can create a classroom if they set themselves as the owner in the new document. Admins can also create classrooms.
      // We use `request.resource.data` because the document does not exist yet.
      allow create: if request.auth.uid == request.resource.data.ownerId || isAdmin();
      
      // UPDATE, DELETE: Only the owner of the existing document or an admin can update/delete it.
      // We use `resource.data` for existing documents.
      allow update, delete: if request.auth.uid == resource.data.ownerId || isAdmin();
      
      // GET (read single doc): Anyone can get a classroom document. This is required for students to join a class using a link.
      allow get: if true;
      
      // LIST (query collection): A user can only list classrooms where they are the owner. Admins can list any classrooms.
      allow list: if request.auth.uid == resource.data.ownerId || isAdmin();

      // SUBCOLLECTIONS (submissions, presence)
      match /{allSubcollections=**} {
        // Only the classroom owner or an admin can access subcollection documents.
        allow read, write: if request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId || isAdmin();
      }
    }
  }
}
