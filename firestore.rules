rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isOwner(resourceId) {
      return request.auth.uid == resource.data.ownerId;
    }
    
    function isAdmin() {
    	return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /classrooms/{classroomId} {
      allow read: if isAdmin() || resource.data.ownerId == request.auth.uid;
      allow create: if request.auth.uid != null;
      allow update, delete: if resource.data.ownerId == request.auth.uid;

      match /submissions/{submissionId} {
        allow read, create: if true; // Open for simplicity, should be tightened
        allow update, delete: if resource.data.ownerId == request.auth.uid;
      }
      
      match /presence/{studentId} {
      	allow read, write: if true; // Open for simplicity
      }
    }
    
    match /users/{userId} {
      // GET: A user can read their own doc, or an admin can read any doc.
      allow get: if request.auth.uid == userId || isAdmin();

      // LIST: Only admins can list all users.
      allow list: if isAdmin();
      
      // WRITE: A user can write their own doc. Admins can delete any doc.
      allow update, create: if request.auth.uid == userId;
      allow delete: if isAdmin();
    }
    
    match /admins/{adminId} {
    	allow read: if isAdmin();
    }
    
    match /courseware/{coursewareId} {
    	allow create: if request.auth.uid != null;
      allow read: if isAdmin() || resource.data.ownerId == request.auth.uid;
      allow update, delete: if resource.data.ownerId == request.auth.uid;
    }
  }
}
