rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /classrooms/{classroomId} {
      // 1. TEACHER PERMISSIONS
      // Teachers have full read/write access to their own classroom documents.
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerId;

      // 2. STUDENT (UNAUTHENTICATED) PERMISSIONS

      // Allow students to GET classroom data (name, student list, etc.) to join.
      // This does NOT allow them to LIST all classrooms.
      allow get: if true;

      // Allow students to UPDATE the race field to claim victory.
      // This is secured by checking the state transition.
      allow update: if
          request.auth == null &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['race']) &&
          resource.data.race.status == 'pending' &&
          request.resource.data.race.status == 'finished';

      // --- SUBCOLLECTION RULES ---

      match /presence/{studentId} {
        // Teacher (owner) can read/write presence data.
        allow read, write: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId == request.auth.uid;

        // Allow students to read the presence list and update presence status.
        allow read, write: if request.auth == null;
      }

      match /submissions/{submissionId} {
        // Teacher (owner) can read/write submissions.
        allow read, write: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId == request.auth.uid;
        
        // Allow students to CREATE submissions. They cannot read or modify any.
        allow create: if request.auth == null;
      }
    }
  }
}
