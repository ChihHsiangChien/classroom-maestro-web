rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Users can only read their own user doc, admins can read any.
    match /users/{userId} {
      allow get: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
      allow write: if request.auth.uid == userId;
    }
    
    match /admins/{adminId} {
      allow read, write: if false; // Only manageable from the Firebase console
    }

    match /classrooms/{classroomId} {
      // Owner can do anything
      allow read, write: if resource.data.ownerId == request.auth.uid;
      // Students can only join (read) if the classroom is not locked.
      allow read: if request.auth == null && resource.data.isLocked == false;
      
      match /submissions/{submissionId} {
        // Teacher can read all submissions in their classroom
        allow read: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId == request.auth.uid;
        // Students can only create submissions (no auth)
        allow create: if request.auth == null;
        allow update, delete: if false; // Nobody can update or delete submissions from the client.
      }
      
      match /presence/{studentId} {
        // Teacher can update presence (for kicking)
        allow write: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId == request.auth.uid;
        // Students can update their own presence (no auth, based on studentId from client)
        allow write: if request.auth == null;

        // Everyone can read presence data to see who is online
        allow read: if true;
      }
    }
    
    match /courseware/{coursewareId} {
        // Owner can read their own. Admin can read all.
        allow read: if resource.data.ownerId == request.auth.uid || isAdmin();
        // Owner can write.
        allow write: if resource.data.ownerId == request.auth.uid;
    }
  }
}
