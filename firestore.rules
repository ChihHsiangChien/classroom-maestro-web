rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // --- Users Collection ---
    // Anyone can read user info (e.g. for display names)
    // The user themselves or an admin can write/delete their document.
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // --- Admins Collection ---
    // Only admins can read the list of admins.
    match /admins/{adminId} {
        allow read: if isAdmin();
        // Writing to this collection should be done via the Firebase Console for security.
        allow write: if false;
    }

    // --- Classrooms Collection ---
    match /classrooms/{classroomId} {
      // The owner can create and update their classroom.
      // An admin can read or delete any classroom.
      allow read, delete: if isOwner(resource.data.ownerId) || isAdmin();
      allow create, update: if isOwner(resource.data.ownerId);

      // Allow anyone to join a classroom (read basic info).
      // This is necessary for the /join page to function.
      allow get: if true;
      
      // Special rule for the race (claimRaceAction).
      // This is OR-ed with the `allow update` above.
      // Allows anyone to update the 'race' field if it's a valid claim.
      allow update: if request.resource.data.keys().hasOnly(['race'])
                      && request.resource.data.race.status == 'finished'
                      && resource.data.race.status == 'pending';
    }
    
    // --- Submissions and Presence Subcollections ---
    match /classrooms/{classroomId}/{subcollection}/{documentId} {
        function isClassroomOwner() {
          return isOwner(get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId);
        }

        // The owner or an admin can read or delete subcollection data.
        allow read, delete: if isClassroomOwner() || isAdmin();
        
        // The owner can create/update.
        allow create, update: if isClassroomOwner();

        // Additionally, allow students to create submissions or update their presence.
        // These are OR-ed with the rule above.
        allow create: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.isLocked == false;
        allow update: if subcollection == 'presence' && request.auth.uid == null;
    }
    
    // --- Courseware Collection ---
    match /courseware/{coursewareId} {
        // The owner can do anything. An admin can only read.
        allow read: if isOwner(resource.data.ownerId) || isAdmin();
        allow write: if isOwner(resource.data.ownerId);
    }

  }
}
