rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isTeacher() {
      // A user is a teacher if they are signed in.
      return request.auth != null;
    }
    
    function isOwner(userId) {
      // Check if the requesting user is the owner of the document.
      return isTeacher() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // An admin must be a signed-in user whose UID exists in the 'admins' collection.
      // This is now checked safely, preventing errors for anonymous users.
      return isTeacher() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isAnonymous() {
      // A user is anonymous if they are not signed in.
      return request.auth == null;
    }

    // Admins have super access. This rule is checked last if others don't match.
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Classrooms Collection
    match /classrooms/{classroomId} {
      // Anonymous users (students on join page) and teachers can read classroom data.
      allow read: if isAnonymous() || isTeacher();
      
      // Only the owner of the classroom can create, update, or delete it.
      allow create, update, delete: if isOwner(resource.data.ownerId);

      // Submissions Subcollection
      match /submissions/{submissionId} {
        // Anyone can read submissions to confirm their own submission status.
        // This is a trade-off for student-side usability.
        allow read: if true;
        
        // Anyone can create (submit) an answer.
        allow create: if true;
        
        // Only the classroom owner can modify or delete submissions.
        allow update, delete: if isOwner(get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId);
      }
      
      // Presence Subcollection
      match /presence/{path=**} {
         // Anyone can read/write presence data. This is needed for students to join
         // and update their online status.
         allow read, write: if true;
      }
    }
    
    // Users Collection (for display names, last activity, etc.)
    match /users/{userId} {
      allow read: if isTeacher();
      allow write: if isOwner(userId);
    }
    
    // Admins collection (to check for admin status)
    match /admins/{userId} {
      allow read: if isTeacher();
    }
    
    // Courseware Collection
    match /courseware/{coursewareId} {
        allow read: if isTeacher();
        allow create: if isTeacher();
        allow update, delete: if isOwner(resource.data.ownerId);
    }
    
    // AI Usage Logs Collection
    match /aiUsageLogs/{logId} {
      // Any authenticated teacher can create a log entry.
      allow create: if isTeacher();
      
      // Only admins can read the logs for the dashboard.
      allow read: if isAdmin();
      
      // Logs are immutable.
      allow update, delete: if false;
    }
  }
}
