
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(collectionName, docId, userId) {
      return get(/databases/$(database)/documents/$(collectionName)/$(docId)).data.ownerId == userId;
    }
    
    function isAuthed() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthed() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Default catch-all for admins
    match /{path=**} {
      allow read, write: if isAdmin();
    }
    
    // User profiles
    match /users/{userId} {
      allow read, write: if isAuthed() && request.auth.uid == userId;
    }
    
    // AI Usage logging
    match /aiUsageLogs/{logId} {
        allow create: if isAuthed();
    }
    
    // Courseware owned by teachers
    match /courseware/{coursewareId} {
      allow read, write: if isAuthed() && isOwner('courseware', coursewareId, request.auth.uid);
    }
    
    // Classrooms and their subcollections
    match /classrooms/{classroomId} {
      // Rules for the classroom document itself
      allow get: if true; // Anyone can get a classroom doc to join
      allow list: if isAuthed(); // Only authenticated users (teachers) can list classrooms
      allow create, update, delete: if isAuthed() && isOwner('classrooms', classroomId, request.auth.uid);

      // Rules for the 'submissions' subcollection
      match /submissions/{submissionId} {
        allow create: if true; // Anyone can create a submission
        // Only the owner can read/modify submissions
        allow read, update, delete: if isAuthed() && isOwner('classrooms', classroomId, request.auth.uid);
      }
      
      // Rules for the 'presence' subcollection and its documents
      // The recursive wildcard {path=**} ensures this rule applies to both listing the collection
      // and getting individual documents, which is what the join page needs.
      match /presence/{path=**} {
        allow read, write: if true;
      }
    }
  }
}
