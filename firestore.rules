rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin status by looking for a document
    // with the user's UID in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rules for the 'users' collection, which stores teacher/admin info.
    match /users/{userId} {
      // Admins can read the full list of users.
      // Authenticated users can read their own user document.
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // An authenticated user can create or update their own user document.
      allow write: if request.auth.uid == userId;
    }

    // Rules for the 'admins' collection.
    match /admins/{adminId} {
      // Only existing admins can read/write the admins collection.
      // This prevents users from making themselves admins.
      allow read, write: if isAdmin();
    }
    
    // Rules for the 'classrooms' collection.
    match /classrooms/{classroomId} {
      // READ: 
      // - 'get' (single doc): Anyone can get a classroom's data. This is needed for students to join.
      // - 'list' (multiple docs): Only the owner or an admin can list classrooms. This protects teacher dashboards.
      allow get: if true;
      allow list: if resource.data.ownerId == request.auth.uid || isAdmin();
      
      // WRITE:
      // - create: An authenticated user can create a classroom, and they must set themselves as the owner.
      // - update/delete: Only the owner or an admin can update/delete their classroom.
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if resource.data.ownerId == request.auth.uid || isAdmin();
      
      // Rules for subcollections within a classroom.
      
      // 'presence' subcollection (student online status)
      match /presence/{studentId} {
        // Anyone can read and write to the presence collection.
        // This is needed for unauthenticated students to see who is online
        // and to update their own online status when joining or leaving.
        allow read, write: if true;
      }

      // 'submissions' subcollection (student answers)
      match /submissions/{submissionId} {
        // READ: Only the classroom owner or an admin can read submissions.
        allow read: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId == request.auth.uid || isAdmin();

        // CREATE: Anyone can create a submission. This is necessary because students are not authenticated users.
        allow create: if true;
        
        // UPDATE/DELETE: Only the classroom owner or an admin can modify or delete submissions (e.g., for clearing history).
        allow update, delete: if get(/databases/$(database)/documents/classrooms/$(classroomId)).data.ownerId == request.auth.uid || isAdmin();
      }
    }
  }
}
