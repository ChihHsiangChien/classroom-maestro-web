rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isTeacher() {
      return request.auth != null;
    }

    function isAdmin() {
      return isTeacher() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    match /classrooms/{classroomId} {
      allow read: if isOwner(resource) || isAdmin();
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if isOwner(resource) || isAdmin();

      match /submissions/{submissionId} {
        allow read: if true;
        allow create: if true; 
        allow update, delete: if isOwner(get(/databases/$(database)/documents/classrooms/$(classroomId))) || isAdmin();
      }
      
      match /presence/{studentId} {
        allow read, write: if true;
      }
    }
    
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /admins/{adminId} {
        allow get: if isTeacher();
        allow list, write: if isAdmin();
    }
    
    match /courseware/{coursewareId} {
      allow read: if isOwner(resource) || isAdmin();
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if isOwner(resource) || isAdmin();
    }
    
    match /aiUsageLogs/{logId} {
        allow create: if isTeacher();
        allow read, update, delete: if isAdmin();
    }
  }
}
