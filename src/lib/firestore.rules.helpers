// This file is not directly deployed to Firestore.
// It is included by the main firestore.rules file.

// --- Basic Checks ---
// Checks if the user is authenticated.
function isLoggedIn() {
  return request.auth != null;
}

// --- Role Checks ---
// Checks if a user is a registered teacher (exists in the /users collection).
function isTeacher(userId) {
  return isLoggedIn() && exists(/databases/$(database)/documents/users/$(userId));
}

// Checks if a user is an admin (exists in the /admins collection).
// Any logged-in user can 'get' to check their own admin status without needing full 'read' permission on the collection.
function isAdmin(userId) {
  return isLoggedIn() && exists(/databases/$(database)/documents/admins/$(userId));
}

// --- Ownership Checks ---
// Checks if the requesting user is the owner of the resource.
// The resource must have an 'ownerId' field.
function isOwner(resourceData) {
    return isLoggedIn() && request.auth.uid == resourceData.ownerId;
}

// --- Resource-specific Access Control ---
// Defines who can access subcollections within a classroom (e.g., submissions, presence).
// Allows the classroom owner, admins, and any user (for submitting answers).
function canAccessSubcollection(classroomId) {
    let classroomData = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
    return isOwner(classroomData) || isAdmin(request.auth.uid) || isLoggedIn();
}
